name: Node.js CI

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - '*'
      - '*/*'
      - '!main'

env:
  node-version: '14'

jobs:
  BuildServer:
    name: Build server application
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-server
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build --if-present

  BuildClient:
    name: Build client application
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-client
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: yarn install --frozen-lockfile --silent

      - name: Build application
        run: yarn build

  UnitTest:
    name: Run server application unit tests
    runs-on: ubuntu-latest
    needs: BuildServer
    defaults:
      run:
        working-directory: ./backend
    services:
      mysql-database:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: database1
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Change node version
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-server
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Create blank .env file for testing purposes
        run: touch .env

      - name: Run unit tests
        run: npm run test:ci

  IntegrationTest:
    name: Run end-to-end system integration tests
    runs-on: ubuntu-latest
    needs: [BuildServer, BuildClient]
    services:
      mysql-database:
        image: mysql:latest
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: database1
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-nodemodules-

      - name: Setup web server for testing
        run: |
          yarn install --production --frozen-lockfile --silent
          cd backend
          npm ci
          touch .env

      - name: Build client application
        run: |
          yarn install --production --frozen-lockfile --silent
          yarn build
        working-directory: ./frontend

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: yarn start:client:ci, yarn start:server:ci
          wait-on: 'http://localhost:3000, http://localhost:5000/api/v1/services'
